# Stage 1: Build the React app
FROM node:18-slim AS build

# Set the working directory
WORKDIR /app

# Copy the package.json and yarn.lock files
COPY frontend/package.json frontend/yarn.lock ./

# Install dependencies
RUN yarn install --frozen-lockfile

# Copy the rest of the application files
COPY ./frontend/ .

# Build the React app
RUN yarn build

# Stage 2: Serve the React app using Nginx
FROM nginx:stable-alpine

# Copy the build output to the Nginx HTML directory
COPY --from=build /app/build /usr/share/nginx/html

# Copy the custom Nginx configuration file
COPY frontend/nginx.conf /etc/nginx/nginx.conf

# Add a script to inject environment variables at runtime
COPY frontend/docker-entrypoint.sh /usr/share/nginx/html/docker-entrypoint.sh
RUN chmod +x /usr/share/nginx/html/docker-entrypoint.sh

ARG REACT_APP_BACKEND_API_BASE_URL
ARG REACT_APP_BACKEND_API_ADDRESS
ARG REACT_APP_BACKEND_API_PORT
ENV REACT_APP_BACKEND_API_BASE_URL=$REACT_APP_BACKEND_API_BASE_URL
ENV REACT_APP_BACKEND_API_ADDRESS=$REACT_APP_BACKEND_API_ADDRESS
ENV REACT_APP_BACKEND_API_PORT=$REACT_APP_BACKEND_API_PORT

# Expose port 8080 for GCP Cloud Run
EXPOSE 8080

# Start Nginx with the entrypoint script to inject environment variables
CMD ["/bin/sh", "-c", "/usr/share/nginx/html/docker-entrypoint.sh && nginx -g 'daemon off;'"]
